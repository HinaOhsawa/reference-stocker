// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// スキーマを設定
model Post {
  id         String   @id @default(cuid())
  title      String
  url        String
  memo       String?
  userId   String
  published  Boolean  @default(true)
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  tags       Tag[]    @relation("PostTags")
  Bookmarks  Bookmark[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  provider           String
  providerAccountId  String
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  user               User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  posts         Post[]
  Bookmarks     Bookmark[]
}

model Tag {
  id            String    @id @default(cuid())
  name          String    @unique 
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  posts Post[]  @relation("PostTags")
}


model Bookmark {
  id        String   @id @default(uuid())  
  userId    String  
  postId    String  
  createdAt DateTime @default(now())  

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])  // ユーザーが同じ投稿を重複して保存しないように
}